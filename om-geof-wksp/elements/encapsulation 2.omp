; OM File Header - Saved 2013/01/11 23:12:19
; (6.050102 :patc (om-make-point 10 60) (om-make-point 169 57) (om-make-point 1149 900) "" 183 0 "2013/01/11 18:38:22" "2013/01/11 18:43:59")
; End File Header
(in-package :om)(load-lib-for (quote ("om-geof")))(setf *om-current-persistent* (om-load-patch1 "encapsulation 2" (quote ((om-load-boxcall (quote abstraction) "mypatch 2" (om-load-patch-abs1 "mypatch 2" (quote ((om-load-boxout "output1" 1 (om-make-point 244 693) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil) (om-load-boxin "input3" 3 (om-make-point 403 189) "" nil nil nil) (om-load-boxin "input2" 2 (om-make-point 272 194) "" nil nil nil) (om-load-boxin "input1" 1 (om-make-point 168 208) "" nil nil nil) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 223 509) (om-make-point 139 43) nil nil nil 1) (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 221 384) (om-make-point 138 43) nil nil nil 1))) (quote ((4 0 0 0 nil 0) (5 0 4 1 nil 0) (3 0 5 0 nil 0) (2 0 5 1 nil 0) (1 0 5 2 nil 0))) 6.050102 nil "" (om-make-point 200 200) (om-make-point 753 779)) (quote ((om-load-inputfun (quote input-funbox) "" "input1" nil) (om-load-inputfun (quote input-funbox) "" "input2" nil) (om-load-inputfun (quote input-funbox) "" "input3" nil))) (om-make-point 222 893/2) nil nil nil nil) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 244 693) (om-make-point 139 43) nil nil nil 1) (om-load-boxcall (quote abstraction) "mypatch" (om-load-patch-abs1 "mypatch" (quote ((om-load-boxcall (quote abstraction) "mypatch" (om-load-patch-abs1 "mypatch" (quote ((om-load-boxout "output1" 1 (om-make-point 207 625) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil) (om-load-boxin "input3" 3 (om-make-point 404 93) "" nil nil nil) (om-load-boxin "input2" 2 (om-make-point 273 98) "" nil nil nil) (om-load-boxin "input1" 1 (om-make-point 169 112) "" nil nil nil) (om-load-boxcall (quote lispfun) "LIST 4" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 136 379) (om-make-point 138 43) nil nil nil 1) (om-load-boxcall (quote lispfun) "LIST 4" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 298 377) (om-make-point 138 43) nil nil nil 1) (om-load-boxcall (quote lispfun) "LIST 4" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 222 288) (om-make-point 138 43) nil nil nil 1))) (quote ((4 0 0 0 nil 0) (6 0 4 2 nil 0) (6 0 5 0 nil 0) (3 0 6 0 nil 0) (2 0 6 1 nil 0) (1 0 6 2 nil 0))) 6.050102 nil "" (om-make-point 200 200) (om-make-point 874 796)) (quote ((om-load-inputfun (quote input-funbox) "" "input1" nil) (om-load-inputfun (quote input-funbox) "" "input2" nil) (om-load-inputfun (quote input-funbox) "" "input3" nil))) (om-make-point 218 350) nil nil nil nil) (om-load-boxout "output1" 1 (om-make-point 207 625) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil) (om-load-boxin "input3" 3 (om-make-point 404 93) "" nil nil nil) (om-load-boxin "input2" 2 (om-make-point 273 98) "" nil nil nil) (om-load-boxin "input1" 1 (om-make-point 169 112) "" nil nil nil))) (quote ((4 0 0 0 nil 0) (3 0 0 1 nil 0) (2 0 0 2 nil 0) (0 0 1 0 nil 0))) 6.050102 nil "" (om-make-point 200 200) (om-make-point 741 730)) (quote ((om-load-inputfun (quote input-funbox) "" "input1" nil) (om-load-inputfun (quote input-funbox) "" "input2" nil) (om-load-inputfun (quote input-funbox) "" "input3" nil))) (om-make-point 928 411) nil nil nil nil) (om-load-boxcall (quote genfun) "OM+ 6" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 272 194) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM+ 5" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 403 189) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM+" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 168 208) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM+ 4" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 911 196) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "LIST 3" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 854 653) (om-make-point 139 43) nil nil nil 1) (om-load-boxcall (quote genfun) "OM+ 3" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 1042 191) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM+ 2" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 807 210) nil nil nil nil 1) (om-load-boxcall (quote genfun) "INSPECT-THIS-PATCH" (quote inspect-this-patch) (quote nil) (om-make-point 492 65) nil (list nil) nil nil 1))) (quote ((5 0 0 0 nil 0) (3 0 0 1 nil 0) (4 0 0 2 nil 0) (0 0 1 2 nil 0) (9 0 2 0 nil 0) (6 0 2 1 nil 0) (8 0 2 2 nil 0) (2 0 7 1 nil 0))) nil 6.050102))
