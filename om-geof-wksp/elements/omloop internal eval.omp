; OM File Header - Saved 2013/01/12 22:25:31
; (6.050102 :patc (om-make-point 10 60) (om-make-point 1027 353) (om-make-point 200 232) "" 183 0 "2013/01/11 22:03:41" "2013/01/12 22:25:31")
; End File Header
(in-package :om)(load-lib-for (quote ("om-geof")))(setf *om-current-persistent* (om-load-patch1 "omloop internal eval" (quote ((om-load-boxwithed1 (quote box-with-win) "collect" (quote omloop) (quote nil) (om-make-point 15 77) nil nil nil (list (om-load-boxcall (quote lispfun) "CAR" (quote car) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 229 218) nil (list 5) nil nil 1) (om-load-boxcall (quote genfun) "min" (quote minim) (quote ((om-load-inputfun (quote input-funbox) "numbers" "VALUE" nil))) (om-make-point 253 262) (om-make-point 82 59) (list 4294967296) nil nil 3) (om-load-boxcall (quote genfun) "onlist" (quote onlistloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 121 122) nil (list (list 1 2 3 4 5)) nil nil 1) (om-load-boxcall (quote genfun) "collect" (quote listing) (quote ((om-load-inputfun (quote input-funbox) "anything" "DATA" nil))) (om-make-point 118 259) nil (list (list (list 1 2 3 4 5) (list 2 3 4 5) (list 3 4 5) (list 4 5) (list 5))) nil nil 3) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 302 98) (om-make-point 55 30) (quote string+) "string+" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 219 147) (om-make-point 24 30) "" "\"\"" nil) (om-load-seqbox "INITDO" (quote initdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 20 240) nil nil nil 0) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 49 75) (om-make-point 75 30) (list 1 2 3 4 5) "(1 2 3 4 5)" nil) (om-load-boxcall (quote genfun) "INSPECT-THIS-PATCH" (quote inspect-this-patch) (quote nil) (om-make-point 378 149) nil (list nil) nil nil 1) (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "value to return" "VAL" nil))) (om-make-point 227 427) nil nil nil 0) (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 30 416) nil nil nil 0)) (quote ((2 0 0 0 nil 0) (0 0 1 0 nil 0) (7 0 2 0 nil 0) (2 0 3 0 nil 0) (2 0 6 0 nil 0) (1 1 9 0 nil 0) (3 0 10 0 nil 0))) 1 "collect" nil) (om-load-boxwithed1 (quote box-with-win) "accum" (quote omloop) (quote nil) (om-make-point 92 74) nil nil nil (list (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 302 98) (om-make-point 55 30) (quote string+) "string+" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 219 147) (om-make-point 24 30) "" "\"\"" nil) (om-load-boxcall (quote genfun) "accum" (quote accumulator) (quote ((om-load-inputfun (quote input-funbox) "items to collect" "DATA" nil) (om-load-inputfun (quote input-funbox) "initial value" "INIT" nil) (om-load-inputfun (quote input-funbox) "accumulation function" "FUN" nil))) (om-make-point 165 250) (om-make-point 121 59) (list "abcd" "" (quote string+)) nil nil 3) (om-load-seqbox "INITDO" (quote initdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 30 269) nil nil nil 0) (om-load-boxcall (quote genfun) "inlist" (quote listloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 122 130) nil (list (list "a" "b" "c" "d")) nil nil 1) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 49 75) (om-make-point 103 30) (list "a" "b" "c" "d") "(\"a\" \"b\" \"c\" \"d\")" nil) (om-load-boxcall (quote genfun) "INSPECT-THIS-PATCH" (quote inspect-this-patch) (quote nil) (om-make-point 378 149) nil (list nil) nil nil 1) (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "value to return" "VAL" nil))) (om-make-point 227 427) nil nil nil 0) (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 70 428) nil nil nil 0)) (quote ((4 0 2 0 nil 0) (1 0 2 1 nil 0) (0 0 2 2 nil 0) (5 0 4 0 nil 0) (2 1 7 0 nil 0) (2 0 8 0 nil 0))) 1 "accum" nil))) (quote nil) nil 6.050102))